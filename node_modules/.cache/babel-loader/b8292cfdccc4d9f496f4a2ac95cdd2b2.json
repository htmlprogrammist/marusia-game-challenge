{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.InlineIcon = exports.Icon = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * Unique id counter\n *\n * @type {number}\n */\n\n\nvar idCounter = 0;\n/**\n * Regex used to split dimensions\n *\n * @type {RegExp}\n * @private\n */\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Attributes used for icon\n *\n * @type {string[]}\n */\n\nvar iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\n * Default attribute values\n *\n * @type {object}\n */\n\nvar defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\n * Add missing properties to icon\n *\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\n *\n * JavaScript version uses separate file so this function could be used in React and other components without loading\n * entire Collection class.\n *\n * @param {object} data\n * @return {object}\n */\n\nfunction normalize(data) {\n  var item = Object.assign(Object.create(null), defaultAttributes, data);\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n\n  return item;\n}\n/**\n * Get preserveAspectRatio attribute value\n *\n * @param {object} align\n * @return {string}\n * @private\n */\n\n\nfunction getAlignment(align) {\n  var result;\n\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n\n    case 'right':\n      result = 'xMax';\n      break;\n\n    default:\n      result = 'xMid';\n  }\n\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n\n    case 'bottom':\n      result += 'YMax';\n      break;\n\n    default:\n      result += 'YMid';\n  }\n\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\n * SVG class\n *\n * @see @iconify/json-tools/src/svg.js\n */\n\n\nvar SVG =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param icon Icon data\n   *  Use Collection.getIconData() to retrieve icon data\n   */\n  function SVG(icon) {\n    _classCallCheck(this, SVG);\n\n    this._item = icon;\n  }\n  /**\n   * Get SVG attributes\n   *\n   * @param {object} props Custom properties (same as query string in Iconify API)\n   * @returns {string}\n   */\n\n\n  _createClass(SVG, [{\n    key: \"getAttributes\",\n    value: function getAttributes(props) {\n      var item = this._item;\n\n      if (_typeof(props) !== 'object') {\n        props = Object.create(null);\n      } // Set data\n\n\n      var align = {\n        horizontal: 'center',\n        vertical: 'middle',\n        slice: false\n      };\n      var transform = {\n        rotate: item.rotate,\n        hFlip: item.hFlip,\n        vFlip: item.vFlip\n      };\n      var style = Object.create(null);\n      var attributes = Object.create(null); // Get width/height\n\n      var inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n      var box = {\n        left: item.left,\n        top: inline ? item.inlineTop : item.top,\n        width: item.width,\n        height: inline ? item.inlineHeight : item.height\n      }; // Transformations\n\n      ['hFlip', 'vFlip'].forEach(function (key) {\n        if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n          transform[key] = !transform[key];\n        }\n      });\n\n      if (props.flip !== void 0) {\n        props.flip.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'horizontal':\n              transform.hFlip = !transform.hFlip;\n              break;\n\n            case 'vertical':\n              transform.vFlip = !transform.vFlip;\n          }\n        });\n      }\n\n      if (props.rotate !== void 0) {\n        var value = props.rotate;\n\n        if (typeof value === 'number') {\n          transform.rotate += value;\n        } else if (typeof value === 'string') {\n          var units = value.replace(/^-?[0-9.]*/, '');\n\n          if (units === '') {\n            value = parseInt(value);\n\n            if (!isNaN(value)) {\n              transform.rotate += value;\n            }\n          } else if (units !== value) {\n            var split = false;\n\n            switch (units) {\n              case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n\n              case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n            }\n\n            if (split) {\n              value = parseInt(value.slice(0, value.length - units.length));\n\n              if (!isNaN(value)) {\n                transform.rotate += Math.round(value / split);\n              }\n            }\n          }\n        }\n      } // Apply transformations to box\n\n\n      var transformations = [],\n          tempValue;\n\n      if (transform.hFlip) {\n        if (transform.vFlip) {\n          transform.rotate += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (transform.vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n\n      switch (transform.rotate % 4) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n      } // Calculate dimensions\n      // Values for width/height: null = default, 'auto' = from svg, false = do not set\n      // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n\n      var customWidth = props.width ? props.width : null;\n      var customHeight = props.height ? props.height : null;\n      var width, height;\n\n      if (customWidth === null && customHeight === null) {\n        customHeight = '1em';\n      }\n\n      if (customWidth !== null && customHeight !== null) {\n        width = customWidth;\n        height = customHeight;\n      } else if (customWidth !== null) {\n        width = customWidth;\n        height = SVG.calculateDimension(width, box.height / box.width);\n      } else {\n        height = customHeight;\n        width = SVG.calculateDimension(height, box.width / box.height);\n      }\n\n      if (width !== false) {\n        attributes.width = width === 'auto' ? box.width : width;\n      }\n\n      if (height !== false) {\n        attributes.height = height === 'auto' ? box.height : height;\n      } // Add vertical-align for inline icon\n\n\n      if (inline && item.verticalAlign !== 0) {\n        style['vertical-align'] = item.verticalAlign + 'em';\n      } // Check custom alignment\n\n\n      if (props.align !== void 0) {\n        props.align.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'left':\n            case 'right':\n            case 'center':\n              align.horizontal = value;\n              break;\n\n            case 'top':\n            case 'bottom':\n            case 'middle':\n              align.vertical = value;\n              break;\n\n            case 'crop':\n              align.slice = true;\n              break;\n\n            case 'meet':\n              align.slice = false;\n          }\n        });\n      } // Generate viewBox and preserveAspectRatio attributes\n\n\n      attributes.preserveAspectRatio = getAlignment(align);\n      attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n      var body = SVG.replaceIDs(item.body);\n\n      if (props.color !== void 0) {\n        body = body.replace(/currentColor/g, props.color);\n      }\n\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n\n      if (props.box === true || props.box === 'true' || props.box === '1') {\n        // Add transparent bounding box\n        body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n      }\n\n      return {\n        attributes: attributes,\n        body: body,\n        style: style\n      };\n    }\n    /**\n     * Generate SVG\n     *\n     * @param {object} props Custom properties (same as query string in Iconify API)\n     * @param {boolean} [addExtra] True if extra attributes should be added to SVG.\n     *  Due to lack of functions in JavaScript for escaping attributes, it is your job to make sure key and value are both properly escaped. Default value is false.\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(props, addExtra) {\n      var attributes = SVG.splitAttributes(props),\n          data = this.getAttributes(attributes.icon);\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add extra attributes - assume that their names and values are escaped\n\n      if (addExtra) {\n        Object.keys(attributes.node).forEach(function (attr) {\n          svg += ' ' + attr + '=\"' + attributes.node[attr] + '\"';\n        });\n      } // Add SVG attributes\n\n\n      Object.keys(data.attributes).forEach(function (attr) {\n        svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n      }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n      svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n      Object.keys(data.style).forEach(function (attr) {\n        svg += ' ' + attr + ': ' + data.style[attr] + ';';\n      });\n\n      if (props && props.style !== void 0) {\n        svg += props.style;\n      }\n\n      svg += '\">';\n      svg += data.body + '</svg>';\n      return svg;\n    }\n    /**\n     * Split attributes\n     *\n     * @param props\n     * @return {{icon: {}, node: {}}}\n     */\n\n  }], [{\n    key: \"splitAttributes\",\n    value: function splitAttributes(props) {\n      var result = {\n        icon: Object.create(null),\n        node: Object.create(null)\n      };\n      Object.keys(props).forEach(function (name) {\n        result[iconAttributes.indexOf(name) === -1 ? 'node' : 'icon'][name] = props[name];\n      });\n      return result;\n    }\n    /**\n     * Calculate second dimension when only 1 dimension is set\n     *\n     * @param {string|number} size One dimension (such as width)\n     * @param {number} ratio Width/height ratio.\n     *      If size == width, ratio = height/width\n     *      If size == height, ratio = width/height\n     * @param {number} [precision] Floating number precision in result to minimize output. Default = 100\n     * @return {string|number|null} Another dimension, null on error\n     */\n\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension(size, ratio, precision) {\n      if (ratio === 1) {\n        return size;\n      }\n\n      precision = precision === void 0 ? 100 : precision;\n\n      if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n      } // split code into sets of strings and numbers\n\n\n      var split = size.split(unitsSplit);\n\n      if (split === null || !split.length) {\n        return null;\n      }\n\n      var results = [],\n          code = split.shift(),\n          isNumber = unitsTest.test(code),\n          num;\n\n      while (true) {\n        if (isNumber) {\n          num = parseFloat(code);\n\n          if (isNaN(num)) {\n            results.push(code);\n          } else {\n            results.push(Math.ceil(num * ratio * precision) / precision);\n          }\n        } else {\n          results.push(code);\n        } // next\n\n\n        code = split.shift();\n\n        if (code === void 0) {\n          return results.join('');\n        }\n\n        isNumber = !isNumber;\n      }\n    }\n    /**\n     * Replace IDs in SVG output with unique IDs\n     * Fast replacement without parsing XML, assuming commonly used patterns.\n     *\n     * @param {string} body\n     * @return {string}\n     */\n\n  }, {\n    key: \"replaceIDs\",\n    value: function replaceIDs(body) {\n      var regex = /\\sid=\"(\\S+)\"/g,\n          ids = [],\n          match,\n          prefix;\n\n      function strReplace(search, replace, subject) {\n        var pos = 0;\n\n        while ((pos = subject.indexOf(search, pos)) !== -1) {\n          subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n          pos += replace.length;\n        }\n\n        return subject;\n      } // Find all IDs\n\n\n      while (match = regex.exec(body)) {\n        ids.push(match[1]);\n      }\n\n      if (!ids.length) {\n        return body;\n      }\n\n      prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n      ids.forEach(function (id) {\n        var newID = prefix + idCounter;\n        idCounter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n      });\n      return body;\n    }\n  }]);\n\n  return SVG;\n}();\n/**\n * Create React component with SVG data\n *\n * @param {object} props\n * @param {boolean} inline\n * @return {null|React.Component}\n */\n\n\nfunction component(props, inline) {\n  if (_typeof(props.icon) !== 'object') {\n    return null;\n  } // Split properties into SVG properties and icon properties\n\n\n  var split = SVG.splitAttributes(props),\n      iconProps = split.icon,\n      customAttributes = split.node;\n  delete customAttributes.icon; // Set default inline value\n\n  if (iconProps.inline === void 0) {\n    iconProps.inline = inline;\n  } // Get SVG data\n\n\n  var svg = new SVG(normalize(props.icon));\n  var iconData = svg.getAttributes(iconProps); // Set style\n\n  var style = {\n    transform: 'rotate(360deg)'\n  };\n\n  if (iconData.style['vertical-align'] !== void 0) {\n    style.verticalAlign = iconData.style['vertical-align'];\n  }\n\n  if (props.style !== void 0) {\n    style = Object.assign(style, props.style);\n  } // Generate element attributes\n\n\n  var attributes = Object.assign({\n    xmlns: 'http://www.w3.org/2000/svg',\n    focusable: false,\n    style: style\n  }, customAttributes, iconData.attributes);\n  attributes.dangerouslySetInnerHTML = {\n    __html: iconData.body\n  }; // Generate SVG\n\n  return _react[\"default\"].createElement('svg', attributes, null);\n}\n/**\n * Icon without vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nvar Icon = function Icon(props) {\n  return component(props, false);\n};\n/**\n * Icon with vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nexports.Icon = Icon;\n\nvar InlineIcon = function InlineIcon(props) {\n  return component(props, true);\n};\n/**\n * Default export\n */\n\n\nexports.InlineIcon = InlineIcon;\nvar _default = Icon;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/React/marusia-game-challenge/node_modules/@iconify/react/dist/icon.js"],"names":["Object","defineProperty","exports","value","InlineIcon","Icon","_react","_interopRequireDefault","require","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","idCounter","unitsSplit","unitsTest","iconAttributes","defaultAttributes","left","top","width","height","rotate","hFlip","vFlip","normalize","data","item","assign","create","inlineTop","inlineHeight","verticalAlign","getAlignment","align","result","horizontal","vertical","slice","SVG","icon","_item","getAttributes","transform","style","attributes","inline","box","forEach","flip","toLowerCase","split","units","replace","parseInt","isNaN","Math","round","transformations","tempValue","push","unshift","customWidth","customHeight","calculateDimension","preserveAspectRatio","viewBox","body","replaceIDs","color","join","getSVG","addExtra","splitAttributes","svg","keys","node","attr","name","indexOf","size","ratio","precision","ceil","results","code","shift","isNumber","test","num","parseFloat","regex","ids","match","prefix","strReplace","search","subject","pos","exec","Date","now","toString","random","id","newID","component","iconProps","customAttributes","iconData","xmlns","focusable","dangerouslySetInnerHTML","__html","createElement","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.InlineIcon = exports.Icon = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Unique id counter\n *\n * @type {number}\n */\nvar idCounter = 0;\n/**\n * Regex used to split dimensions\n *\n * @type {RegExp}\n * @private\n */\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Attributes used for icon\n *\n * @type {string[]}\n */\n\nvar iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\n * Default attribute values\n *\n * @type {object}\n */\n\nvar defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\n * Add missing properties to icon\n *\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\n *\n * JavaScript version uses separate file so this function could be used in React and other components without loading\n * entire Collection class.\n *\n * @param {object} data\n * @return {object}\n */\n\nfunction normalize(data) {\n  var item = Object.assign(Object.create(null), defaultAttributes, data);\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n\n  return item;\n}\n/**\n * Get preserveAspectRatio attribute value\n *\n * @param {object} align\n * @return {string}\n * @private\n */\n\n\nfunction getAlignment(align) {\n  var result;\n\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n\n    case 'right':\n      result = 'xMax';\n      break;\n\n    default:\n      result = 'xMid';\n  }\n\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n\n    case 'bottom':\n      result += 'YMax';\n      break;\n\n    default:\n      result += 'YMid';\n  }\n\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\n * SVG class\n *\n * @see @iconify/json-tools/src/svg.js\n */\n\n\nvar SVG =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param icon Icon data\n   *  Use Collection.getIconData() to retrieve icon data\n   */\n  function SVG(icon) {\n    _classCallCheck(this, SVG);\n\n    this._item = icon;\n  }\n  /**\n   * Get SVG attributes\n   *\n   * @param {object} props Custom properties (same as query string in Iconify API)\n   * @returns {string}\n   */\n\n\n  _createClass(SVG, [{\n    key: \"getAttributes\",\n    value: function getAttributes(props) {\n      var item = this._item;\n\n      if (_typeof(props) !== 'object') {\n        props = Object.create(null);\n      } // Set data\n\n\n      var align = {\n        horizontal: 'center',\n        vertical: 'middle',\n        slice: false\n      };\n      var transform = {\n        rotate: item.rotate,\n        hFlip: item.hFlip,\n        vFlip: item.vFlip\n      };\n      var style = Object.create(null);\n      var attributes = Object.create(null); // Get width/height\n\n      var inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n      var box = {\n        left: item.left,\n        top: inline ? item.inlineTop : item.top,\n        width: item.width,\n        height: inline ? item.inlineHeight : item.height\n      }; // Transformations\n\n      ['hFlip', 'vFlip'].forEach(function (key) {\n        if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n          transform[key] = !transform[key];\n        }\n      });\n\n      if (props.flip !== void 0) {\n        props.flip.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'horizontal':\n              transform.hFlip = !transform.hFlip;\n              break;\n\n            case 'vertical':\n              transform.vFlip = !transform.vFlip;\n          }\n        });\n      }\n\n      if (props.rotate !== void 0) {\n        var value = props.rotate;\n\n        if (typeof value === 'number') {\n          transform.rotate += value;\n        } else if (typeof value === 'string') {\n          var units = value.replace(/^-?[0-9.]*/, '');\n\n          if (units === '') {\n            value = parseInt(value);\n\n            if (!isNaN(value)) {\n              transform.rotate += value;\n            }\n          } else if (units !== value) {\n            var split = false;\n\n            switch (units) {\n              case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n\n              case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n            }\n\n            if (split) {\n              value = parseInt(value.slice(0, value.length - units.length));\n\n              if (!isNaN(value)) {\n                transform.rotate += Math.round(value / split);\n              }\n            }\n          }\n        }\n      } // Apply transformations to box\n\n\n      var transformations = [],\n          tempValue;\n\n      if (transform.hFlip) {\n        if (transform.vFlip) {\n          transform.rotate += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (transform.vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n\n      switch (transform.rotate % 4) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n      } // Calculate dimensions\n      // Values for width/height: null = default, 'auto' = from svg, false = do not set\n      // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n\n      var customWidth = props.width ? props.width : null;\n      var customHeight = props.height ? props.height : null;\n      var width, height;\n\n      if (customWidth === null && customHeight === null) {\n        customHeight = '1em';\n      }\n\n      if (customWidth !== null && customHeight !== null) {\n        width = customWidth;\n        height = customHeight;\n      } else if (customWidth !== null) {\n        width = customWidth;\n        height = SVG.calculateDimension(width, box.height / box.width);\n      } else {\n        height = customHeight;\n        width = SVG.calculateDimension(height, box.width / box.height);\n      }\n\n      if (width !== false) {\n        attributes.width = width === 'auto' ? box.width : width;\n      }\n\n      if (height !== false) {\n        attributes.height = height === 'auto' ? box.height : height;\n      } // Add vertical-align for inline icon\n\n\n      if (inline && item.verticalAlign !== 0) {\n        style['vertical-align'] = item.verticalAlign + 'em';\n      } // Check custom alignment\n\n\n      if (props.align !== void 0) {\n        props.align.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'left':\n            case 'right':\n            case 'center':\n              align.horizontal = value;\n              break;\n\n            case 'top':\n            case 'bottom':\n            case 'middle':\n              align.vertical = value;\n              break;\n\n            case 'crop':\n              align.slice = true;\n              break;\n\n            case 'meet':\n              align.slice = false;\n          }\n        });\n      } // Generate viewBox and preserveAspectRatio attributes\n\n\n      attributes.preserveAspectRatio = getAlignment(align);\n      attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n      var body = SVG.replaceIDs(item.body);\n\n      if (props.color !== void 0) {\n        body = body.replace(/currentColor/g, props.color);\n      }\n\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n\n      if (props.box === true || props.box === 'true' || props.box === '1') {\n        // Add transparent bounding box\n        body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n      }\n\n      return {\n        attributes: attributes,\n        body: body,\n        style: style\n      };\n    }\n    /**\n     * Generate SVG\n     *\n     * @param {object} props Custom properties (same as query string in Iconify API)\n     * @param {boolean} [addExtra] True if extra attributes should be added to SVG.\n     *  Due to lack of functions in JavaScript for escaping attributes, it is your job to make sure key and value are both properly escaped. Default value is false.\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(props, addExtra) {\n      var attributes = SVG.splitAttributes(props),\n          data = this.getAttributes(attributes.icon);\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add extra attributes - assume that their names and values are escaped\n\n      if (addExtra) {\n        Object.keys(attributes.node).forEach(function (attr) {\n          svg += ' ' + attr + '=\"' + attributes.node[attr] + '\"';\n        });\n      } // Add SVG attributes\n\n\n      Object.keys(data.attributes).forEach(function (attr) {\n        svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n      }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n      svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n      Object.keys(data.style).forEach(function (attr) {\n        svg += ' ' + attr + ': ' + data.style[attr] + ';';\n      });\n\n      if (props && props.style !== void 0) {\n        svg += props.style;\n      }\n\n      svg += '\">';\n      svg += data.body + '</svg>';\n      return svg;\n    }\n    /**\n     * Split attributes\n     *\n     * @param props\n     * @return {{icon: {}, node: {}}}\n     */\n\n  }], [{\n    key: \"splitAttributes\",\n    value: function splitAttributes(props) {\n      var result = {\n        icon: Object.create(null),\n        node: Object.create(null)\n      };\n      Object.keys(props).forEach(function (name) {\n        result[iconAttributes.indexOf(name) === -1 ? 'node' : 'icon'][name] = props[name];\n      });\n      return result;\n    }\n    /**\n     * Calculate second dimension when only 1 dimension is set\n     *\n     * @param {string|number} size One dimension (such as width)\n     * @param {number} ratio Width/height ratio.\n     *      If size == width, ratio = height/width\n     *      If size == height, ratio = width/height\n     * @param {number} [precision] Floating number precision in result to minimize output. Default = 100\n     * @return {string|number|null} Another dimension, null on error\n     */\n\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension(size, ratio, precision) {\n      if (ratio === 1) {\n        return size;\n      }\n\n      precision = precision === void 0 ? 100 : precision;\n\n      if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n      } // split code into sets of strings and numbers\n\n\n      var split = size.split(unitsSplit);\n\n      if (split === null || !split.length) {\n        return null;\n      }\n\n      var results = [],\n          code = split.shift(),\n          isNumber = unitsTest.test(code),\n          num;\n\n      while (true) {\n        if (isNumber) {\n          num = parseFloat(code);\n\n          if (isNaN(num)) {\n            results.push(code);\n          } else {\n            results.push(Math.ceil(num * ratio * precision) / precision);\n          }\n        } else {\n          results.push(code);\n        } // next\n\n\n        code = split.shift();\n\n        if (code === void 0) {\n          return results.join('');\n        }\n\n        isNumber = !isNumber;\n      }\n    }\n    /**\n     * Replace IDs in SVG output with unique IDs\n     * Fast replacement without parsing XML, assuming commonly used patterns.\n     *\n     * @param {string} body\n     * @return {string}\n     */\n\n  }, {\n    key: \"replaceIDs\",\n    value: function replaceIDs(body) {\n      var regex = /\\sid=\"(\\S+)\"/g,\n          ids = [],\n          match,\n          prefix;\n\n      function strReplace(search, replace, subject) {\n        var pos = 0;\n\n        while ((pos = subject.indexOf(search, pos)) !== -1) {\n          subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n          pos += replace.length;\n        }\n\n        return subject;\n      } // Find all IDs\n\n\n      while (match = regex.exec(body)) {\n        ids.push(match[1]);\n      }\n\n      if (!ids.length) {\n        return body;\n      }\n\n      prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n      ids.forEach(function (id) {\n        var newID = prefix + idCounter;\n        idCounter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n      });\n      return body;\n    }\n  }]);\n\n  return SVG;\n}();\n/**\n * Create React component with SVG data\n *\n * @param {object} props\n * @param {boolean} inline\n * @return {null|React.Component}\n */\n\n\nfunction component(props, inline) {\n  if (_typeof(props.icon) !== 'object') {\n    return null;\n  } // Split properties into SVG properties and icon properties\n\n\n  var split = SVG.splitAttributes(props),\n      iconProps = split.icon,\n      customAttributes = split.node;\n  delete customAttributes.icon; // Set default inline value\n\n  if (iconProps.inline === void 0) {\n    iconProps.inline = inline;\n  } // Get SVG data\n\n\n  var svg = new SVG(normalize(props.icon));\n  var iconData = svg.getAttributes(iconProps); // Set style\n\n  var style = {\n    transform: 'rotate(360deg)'\n  };\n\n  if (iconData.style['vertical-align'] !== void 0) {\n    style.verticalAlign = iconData.style['vertical-align'];\n  }\n\n  if (props.style !== void 0) {\n    style = Object.assign(style, props.style);\n  } // Generate element attributes\n\n\n  var attributes = Object.assign({\n    xmlns: 'http://www.w3.org/2000/svg',\n    focusable: false,\n    style: style\n  }, customAttributes, iconData.attributes);\n  attributes.dangerouslySetInnerHTML = {\n    __html: iconData.body\n  }; // Generate SVG\n\n  return _react[\"default\"].createElement('svg', attributes, null);\n}\n/**\n * Icon without vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nvar Icon = function Icon(props) {\n  return component(props, false);\n};\n/**\n * Icon with vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nexports.Icon = Icon;\n\nvar InlineIcon = function InlineIcon(props) {\n  return component(props, true);\n};\n/**\n * Default export\n */\n\n\nexports.InlineIcon = InlineIcon;\nvar _default = Icon;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}